{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleSortAlphabetically","ALPHABET","handleSortByLength","LENGTH","handleReset","this","isChanged","display","goods","visibleGoods","sort","first","second","localeCompare","length","Error","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAPjD,EAUEK,yBAA2B,WACzB,EAAKD,SAAS,CAAEH,SAAUL,EAASU,YAXvC,EAcEC,mBAAqB,WACnB,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAfvC,EAkBEC,YAAc,WACZ,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QAnB1D,4CAsBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAYD,KAAKX,MAAMC,YAC1BU,KAAKX,MAAME,WAAaL,EAASM,KAE9BU,EAjDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENc,EAAY,YAAOD,GAEzB,OAAQZ,GACN,KAAKL,EAASU,SACZQ,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACzD,MACF,KAAKrB,EAASY,OACZM,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OAASF,EAAOE,UAC3D,MACF,KAAKvB,EAASM,KACZ,MACF,QACE,MAAM,IAAIkB,MAAM,oBAGpB,OAAOpB,EAAac,EAAaO,UAAYP,EA8B3BQ,CACdzB,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBtB,IAAaL,EAASU,UAAY,YAC/DmB,QAASf,KAAKL,yBAHhB,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBtB,IAAaL,EAASY,QAAU,YAChEiB,QAASf,KAAKH,mBAHhB,4BAQA,wBACEiB,KAAK,SACLD,UAAS,6BAAwBvB,GAAc,YAC/CyB,QAASf,KAAKP,cAHhB,qBASEQ,GAEI,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAASf,KAAKD,YAHhB,sBAWR,6BACIG,EACCc,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA3EtC,GAAyBC,IAAMC,WChD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fa579914.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n// import { render } from 'react-dom';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface State {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((first, second) => first.localeCompare(second));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((first, second) => first.length - second.length);\n      break;\n    case SortType.NONE:\n      break;\n    default:\n      throw new Error('Invalid SortType');\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const isChanged = this.state.isReversed\n    || this.state.sortType !== SortType.NONE;\n\n    const display = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {\n            isChanged\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.handleReset}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          { display\n            .map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}